% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/subtyper.R
\name{adjust_p_values}
\alias{adjust_p_values}
\title{Adjust P-values and Return Subsetted Dataframe}
\usage{
adjust_p_values(
  resdf,
  methods = c("BY", "BH", "none", "none"),
  alpha = c(0.05, 0.05, 0.05, 0.2)
)
}
\arguments{
\item{resdf}{A data frame containing at least a column named \code{p} with p-values.}

\item{methods}{A character vector specifying the methods for p-value adjustment. Default is \code{c('BY', 'BH', 'none', 'none')}.}

\item{alpha}{A numeric vector specifying the alpha levels for p-value adjustment. Default is \code{c(0.05, 0.05, 0.05, 0.2)}.}
}
\value{
A subsetted dataframe where the adjusted p-values are less than or equal to the corresponding alpha levels.
}
\description{
This function adjusts p-values using a specified method and alpha level.
It successively tests each method along with each alpha value, and if
the sum is zero, it continues to the next method. Otherwise, it returns
the subsetted dataframe.
}
\details{
The function checks that the lengths of \code{methods} and \code{alpha} are equivalent and that all alpha values are in the range (0, 1). It iterates over the provided methods and alpha values, adjusting the p-values using the \code{p.adjust} function from the \code{stats} package. If the sum of selected values is greater than zero, it returns the subsetted dataframe.
}
\examples{
# Example dataset
set.seed(123)
resdf <- data.frame(
  p = runif(100, min = 0, max = 1)
)

# Example usage of adjust_p_values
adjusted_df <- adjust_p_values(resdf, 
 methods = c('BY', 'BH', 'none', 'none'), 
 alpha = c(0.05, 0.05, 0.05, 0.2))
head(adjusted_df)
}
