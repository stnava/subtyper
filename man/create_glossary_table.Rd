% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/subtyper.R
\name{create_glossary_table}
\alias{create_glossary_table}
\title{Create and Display a Styled Glossary Table}
\usage{
create_glossary_table(
  terms,
  table_title = "Glossary of Terms",
  term_color = "purple",
  term_decoration = "underline",
  def_bg = "gray",
  def_color = "white",
  font_size = "12pt",
  table_width = "100\%",
  max_height = "400px",
  border_color = "black",
  border_style = "solid",
  border_weight = "2pt"
)
}
\arguments{
\item{terms}{A named list where names are terms and values are definitions.}

\item{table_title}{Title for the glossary table (default: "Glossary of Terms").}

\item{term_color}{Color for glossary terms in the table (default: "purple").}

\item{term_decoration}{Text decoration for terms (default: "underline"). Supports "underline", "overline", "line-through" (requires LaTeX package \code{ulem} for line-through).}

\item{def_bg}{Background color for definitions (default: "gray").}

\item{def_color}{Text color for definitions (default: "white").}

\item{font_size}{Font size for the table (default: "12pt").}

\item{table_width}{Width of the table (default: "100\%").}

\item{max_height}{Maximum height of the table (default: "400px").}

\item{border_color}{Color of cell borders (default: "black").}

\item{border_style}{Style of cell borders (default: "solid"). Supports "solid", "dashed", "dotted".}

\item{border_weight}{Weight of cell borders (default: "2pt" for better visibility).}
}
\value{
A gt table object displaying the glossary.
}
\description{
This function creates a glossary with terms and definitions, rendering them as a formatted gt table with customizable styling, optimized for both HTML and PDF output, with text wrapping for definitions and visible borders between cells.
}
\examples{
terms <- list(
  "SiMLr" = "A dimensionality reduction technique for integrating multi-modal data...",
  "M3RI" = "Combining different MRI modalities, such as structural MRI..."
)
create_glossary_table(terms)

}
