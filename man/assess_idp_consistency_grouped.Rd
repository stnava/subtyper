% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/subtyper.R
\name{assess_idp_consistency_grouped}
\alias{assess_idp_consistency_grouped}
\title{Assess IDP Consistency with OpenAI Chat Models (Grouped by Domain)}
\usage{
assess_idp_consistency_grouped(
  df,
  domain_col,
  idp_cols,
  model = "gpt-3.5-turbo",
  temperature = 0,
  verbose = TRUE,
  pause_sec = 3,
  max_retries = 5
)
}
\arguments{
\item{df}{A \code{data.frame} containing the performance domain column and IDP columns.}

\item{domain_col}{A string specifying the name of the column in \code{df}
that contains the performance domain labels (e.g., \code{"Perf.Dom"}).}

\item{idp_cols}{A character vector specifying the names of the columns
containing the IDP values (e.g., \code{c("IDP.1", "IDP.2", "IDP.3")}).}

\item{model}{The OpenAI model to use. Defaults to \code{"gpt-3.5-turbo"}
for compatibility with free-tier accounts. Can also be \code{"gpt-4o-mini"} or similar if available.}

\item{temperature}{Sampling temperature for the model (0 = deterministic).}

\item{verbose}{Logical; if \code{TRUE}, prints progress messages and API status.}

\item{pause_sec}{Number of seconds to pause between API requests (to avoid rate limiting).}

\item{max_retries}{Maximum number of retries after hitting rate limits.}
}
\value{
A \code{data.frame} with the original \code{df} columns plus:
\describe{
\item{\code{consistency_overall}}{One of "Strong", "Moderate", or "Weak".}
\item{\code{overall_justification}}{A one-to-two sentence explanation.}
\item{\code{idp_breakdown}}{A list-column mapping each IDP to its individual consistency rating.}
}
}
\description{
This function queries an OpenAI chat model to assess the consistency of
Imaging Derived Phenotypes (IDPs) for a given performance domain.
Rows are grouped by a specified domain column, and each group is sent as a
single API request, reducing the number of calls and mitigating rate-limit issues.
}
\details{
The function works in three stages:
\enumerate{
\item Groups rows of \code{df} by the specified \code{domain_col}.
\item For each group, creates a structured prompt containing all IDPs in that group.
\item Sends a single API request for the group, and parses the returned JSON into
\code{consistency_overall}, \code{overall_justification}, and \code{idp_breakdown}.
}

The OpenAI API key must be available in the \code{OPENAI_API_KEY} environment variable,
set via \code{Sys.setenv(OPENAI_API_KEY = "your_api_key_here")}.
}
\examples{
\dontrun{
# Example data
df <- data.frame(
  PC_Name = c("PC-6", "PC-10"),
  Perf.Dom = c("working.memory", "recall.total"),
  IDP.1 = c("t1.vol.sup.frontal.ctx", "t1.vol.inf.parietal.ctx"),
  IDP.2 = c("t1.vol.occipital.ctx", "t1.vol.hippocampus"),
  stringsAsFactors = FALSE
)

results <- assess_idp_consistency_grouped(
  df,
  domain_col = "Perf.Dom",
  idp_cols = c("IDP.1", "IDP.2"),
  model = "gpt-3.5-turbo",
  temperature = 0
)
print(results)
}

}
